# General settings for script runtime
seeding:
  method: endtime    # "endtime" or "minutes" to determine when to kill the game stop the script
  endtime: 10:00 pm  # definitive stop time regardless of when the script started
  minutes: 720       # how many minutes after script start to stop


# Settings for configuring specific servers to seed and how/when to seed them
priority:
  # Monitor priority servers when done or in perpetual mode.
  # Monitor helps if certain servers seed later than others
  monitor_enabled: true
  monitor_endtime: 10:00 pm
  # Make the server list ranked from highest to lowest priority. If currently on a priority server and another priority server
  # above it meets seeding criteria, switch to that one instead.
  monitor_ranked: true

  # Default minimum players to consider seeding
  # Can be modified on a server-by-server basis with a "min_players" option on a priority server.
  # 0 - start the seed and wait indefinitely
  # 2 or more - only help out if others are on and trying
  min_players: 2

  # List of servers to seed
  # Configure servers to seed by "ip:port" or with keywords to find from the steam server list
  servers: [
    # top priority if we're actually trying (haven't for a while), otherwise help servers below it
    { steam_search: brewdawg east, min_players: 3 },
    # always tries to seed early
    { steam_search: saucymuffin beer },
    { steam_search: glow's east },
    { steam_search: outpost bhb },
    { steam_search: glow's west },
    { steam_search: soulsniper },
    # only seed/join if others are on trying and leave if they leave
    { steam_search: chad stuart flare, min_players: 8 },
    { steam_search: rotn rangers, min_players: 8 },
    { steam_search: brewdawg west, min_players: 3 },
  ]

# Example (keywords search) split by whitespace, server must contain all words.
# If multiple servers match, ordered by most populated not already queued and must fit seeding criteria
# Watch for conflicts with {ignore_name_contains} property
#  {steam_search: foo east}        for example will match: "FOO Server :: US East - blah blah blah"
#  {steam_search: foo east, min_players: 6}
#
# Example (ip:port) with optional name verification
# Find ip:port from the Steam Server Browser or from BattleMetrics
# Verify checks the server name contains all words listed split by whitespace
#  {
#    about: Saucymuffin,
#    address: 192.169.95.146:9075,
#    verify: BEER
#  }


# Max player count before moving to the next server
# 40 is technically seeded though it's best to stick around to at least 50-60
seeded_player_limit: 50
# If you are running multiple seed scripts/accounts, randomly add 0-N to the limit to mitigate scripts moving on at the same time.
seeded_player_variability: 5
# Delay between server poll in seconds
server_query_rate: 15
# Server poll timeout in seconds
server_query_timeout: 15
# How many timeouts before moving on when monitoring a server
query_timeout_limit: 6
# Check if name is in the player list
check_idle_kick: false
player_name: SodiumEnglish # replace this with your in-game name - use quotes if contains special characters


# When out of servers, search the steam server list for more seeding servers
# Help out the rest of the community!
perpetual_mode:
  enabled: true
  # How to pick the servers to queue assuming a list of servers match seeding criteria
  # Options: most_populated, least_populated, random
  choose_method: random
  # How many servers to queue for seeding (ordered from most to least populated)
  # Only applies when priority monitor is disabled otherwise is 1
  max_servers: 2
  # Minimum players to consider seeding
  min_players: 8
  # Do not seed servers with these terms in the name (case-insensitive)
  ignore_name_contains: [
    cn, violet, # chinese
    event, training, test, # real servers only
    hll official, # community servers only
    fr only, french # will be banned unless you are actually french (they check steam profile country)
  ]

# list of procs to checkwhen determining if the game is running - see 'is_fully_running()' in 'seeding.py'
# + add more if you have other procs that need to be running for the game to be fully running
# - remove any that are not needed or are causing false negatives for 'is_fully_running()'
misc_game_processes:
  - "GameOverlayUI.exe" # Remove/comment this one if your Steam Overlay is disabled
  - "HLL_BugReportUploader.exe"
  - "CrashReportClient.exe"

# options that help with script development/debugging
debug:
  # do not launch game or join servers but operate almost as if it did
  no_game: false
  # log extra details to help debug
  extra_logs: false
  # on game crash or idle/disconnect, focus windows and takes a screenshot before closing applications
  screenshots: true